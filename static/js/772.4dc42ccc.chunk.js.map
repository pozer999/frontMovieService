{"version":3,"file":"static/js/772.4dc42ccc.chunk.js","mappings":"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","sources":["webpack://movie/./src/widgets/MainContainer/ui/MainContainer.module.scss?3fff","webpack://movie/./src/entities/postFilm/ui/PostFilm.module.scss?8a44","entities/postFilm/ui/PostFilm.tsx","shared/SkeletonItem/SkeletonItem.tsx","widgets/ListFilms/ui/ListFilms.tsx","webpack://movie/./src/widgets/CarouselFilms/ui/CarouselFilms.module.scss?bbfa","widgets/CarouselFilms/ui/CarouselFilms.tsx","shared/const/filters.ts","features/SortedAndInput/ui/SortedAndInput.tsx","widgets/MainContainer/ui/MainContainer.tsx","pages/MainPage/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputAndFilmsContainer\":\"MainContainer_inputAndFilmsContainer__nwyBh\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerPost\":\"PostFilm_containerPost__89KLb\"};","import cls from './PostFilm.module.scss';\nimport { Badge, Card } from 'antd';\nimport Meta from 'antd/es/card/Meta';\nimport { memo } from 'react';\nexport const PostFilm = memo(({ film }: any) => {\n\tconsole.log('film: ', film);\n\treturn (\n\t\t<Badge\n\t\t\tcount={film.rating}\n\t\t\tcolor='green'>\n\t\t\t<div className={cls.containerPost}>\n\t\t\t\t<Card\n\t\t\t\t\tloading={false}\n\t\t\t\t\thoverable\n\t\t\t\t\tcover={\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt='example'\n\t\t\t\t\t\t\tsrc='../image/mstiteli-voyna-beskonechnosti-2160x3840-mstiteli-voyna-beskonechnosti-17937.jpg'\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<Meta\n\t\t\t\t\t\ttitle={[film.title, ' Â· ', film.release_year]}\n\t\t\t\t\t\tdescription={film.genre}\n\t\t\t\t\t/>\n\t\t\t\t\t<Meta description={film.actors} />\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</Badge>\n\t);\n});\n\n","import { CloseOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, Divider, Drawer, Row, Skeleton } from \"antd\";\nimport { CurrentFilm } from \"pages/CurrentFilm\";\nimport { useCallback, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { AuthActions } from \"store/modalAuthAndRegisterReducer\";\n\nconst SkeletonItem = () => {\n    const dispatch = useDispatch();\n    const visibleCurrentFilm = useSelector(\n        (state: RootState) =>\n            state.modalAuthAndRegisterReducer.isVisibleCurrentFilm\n    );\n    const handleOpenCurrentFilm = useCallback(() => {\n        dispatch(AuthActions.openCurrentFilm());\n    }, [dispatch]);\n    const handleCloseCurrentFilm = useCallback(() => {\n        dispatch(AuthActions.closeCurrentFilm());\n    }, [dispatch]);\n    // const [open, setOpen] = useState(false);\n\n    // const showDrawer = () => {\n    //   setOpen(true);\n    // };\n\n    // const onClose = () => {\n    //   setOpen(false);\n    // };\n    return (\n        <Col className=\"gutter-row\" span={6} style={{ position: \"relative\" }}>\n            <Card\n                loading={false}\n                hoverable\n                cover={\n                    <Skeleton.Image\n                        active={true}\n                        style={{\n                            fontSize: 40,\n                            width: 250,\n                            height: 200,\n                            marginTop: 20,\n                        }}\n                    />\n                }\n                onClick={handleOpenCurrentFilm}\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    height: \"100%\",\n                }}\n            >\n                <Row gutter={[1, 10]}>\n                    <Skeleton.Input active={true} size=\"small\" />\n                    <Skeleton.Input active={true} size=\"small\" block />\n                    <Skeleton.Input active={true} size=\"small\" block />\n                </Row>\n            </Card>\n            <Drawer\n                title={\n                    <Divider\n                        orientation=\"center\"\n                        style={{ fontSize: 26, fontWeight: \"bold\" }}\n                    >\n                        The martian\n                    </Divider>\n                }\n                placement=\"right\"\n                size={\"large\"}\n                closable={false}\n                open={visibleCurrentFilm}\n                onClose={handleCloseCurrentFilm}\n                style={{ overflow: \"hidden\" }}\n                extra={\n                    <CloseOutlined\n                        onClick={handleCloseCurrentFilm}\n                        style={{ color: \"grey\" }}\n                    />\n                }\n            >\n                <CurrentFilm />\n            </Drawer>\n        </Col>\n    );\n};\n\nexport default SkeletonItem;\n","import { Col, Grid, Row, Skeleton, Space, Spin } from \"antd\";\nimport React, { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFilms } from \"../../../store/FilmsSlice\";\nimport { AppDispatch, RootState } from \"../../../store\";\nimport { PostFilm } from \"entities/postFilm\";\nimport SkeletonItem from \"shared/SkeletonItem/SkeletonItem\";\n\nexport const ListFilms = memo(() => {\n    const dispatch = useDispatch<AppDispatch>();\n    const filter = useSelector((state: any) => state.films.filter);\n    const films = useSelector((state: any) => state.films.films);\n    const isLoading = useSelector((state: RootState) => state.films.isLoading);\n    const error = useSelector((state: RootState) => state.films.error);\n    console.log(\"list: \", films);\n    useEffect(() => {\n        dispatch(fetchFilms(filter));\n    }, [filter, dispatch]);\n    return (\n        <div>\n            {isLoading ? (\n                error === undefined ? (\n                    <>\n                        <Spin\n                            tip=\"Loading\"\n                            size=\"large\"\n                            style={{\n                                alignItems: \"center\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                marginTop: 30,\n                            }}\n                        ></Spin>\n                        <Skeleton.Image active={true} />\n                    </>\n                ) : (\n                    <div\n                        style={{\n                            alignItems: \"center\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: 30,\n                            color: \"rgb(202, 92, 92)\",\n                            fontSize: 20,\n                        }}\n                    >\n                        ÐÑÐ¸Ð±ÐºÐ° Ð·Ð°Ð³ÑÑÐ·ÐºÐ¸ ÑÐ¸Ð»ÑÐ¼Ð¾Ð²...\n                    </div>\n                )\n            ) : films.length !== 0 ? (\n                <Row gutter={[16, 24]} style={{ margin: 10, marginTop: 50, marginBottom: 50 }}>\n                    {films.map((film: any, i: number) => (\n                        <Col className=\"gutter-row\" span={6} key={i}>\n                            <PostFilm film={film}/>\n                        </Col>\n                    ))}\n                </Row>\n            ) : (\n                <Row gutter={[16, 24]} style={{ margin: 10, marginTop: 50, marginBottom: 50 }}>\n                    {[1,2,3,4,5,6,7,8].map((item, index) => (\n                            <SkeletonItem key={index}/>\n                    ))}\n                </Row>\n            )}\n        </div>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"carousel\":\"CarouselFilms_carousel__gK-x5\",\"imageCarousel\":\"CarouselFilms_imageCarousel__SaucW\"};","import cls from \"./CarouselFilms.module.scss\";\nimport { Carousel } from \"antd\";\nimport { FC, memo } from \"react\";\n/////////////////////////////////\nimport mstiteli from '../../../image/kartinki-mstiteli-14.jpg';\nimport image2 from '../../../image/2.jpg';\nimport image3 from '../../../image/3.jpeg';\nimport image4 from '../../../image/4.jpeg';\n//////////////////////////////////\nexport const CarouselFilms: FC = memo(() => {\n    const carouselItems: string[] = [\n        mstiteli,\n        image2,\n        image3,\n        image4,\n    ];\n\n    return (\n        <div>\n            <Carousel autoplay className={cls.carousel}>\n                {carouselItems.map((item, index) => (\n                    <img\n                        src={item}\n                        alt=\"\"\n                        className={cls.imageCarousel}\n                        key={index}\n                    />\n                ))}\n            </Carousel>\n        </div>\n    );\n});\n\n\n// export default memo(CarouselFilms);\n","export enum Filters {\n  By_date = 'By date',\n  By_alphabet = 'By alphabet',\n  By_rating = 'By rating',\n}\nexport interface filterType {\n  value: string;\n  label: string;\n}\nexport const filters = [\n  { value: Filters.By_date, label: Filters.By_date },\n  { value: Filters.By_alphabet, label: Filters.By_alphabet },\n  { value: Filters.By_rating, label: Filters.By_rating },\n];\n","import { Button, Col, Input, Row, Select, Space, Tooltip } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { filmsActions } from \"../../../store/FilmsSlice\";\nimport { filters } from \"../../../shared/const/filters\";\n\nexport const SortedAndInput = () => {\n    const dispatch = useDispatch();\n    const currentFilter = useSelector((state: any) => state.films.filters);\n    const handleChange = (value: string) => {\n        dispatch(filmsActions.changeFilters(value));\n    };\n    return (\n        <Row justify=\"space-between\" align=\"middle\" style={{ margin: 10 }}>\n            <Col span={14}>\n                <Tooltip placement=\"top\" title={\"Select sorting\"} arrow>\n                    <Select\n                        defaultValue={currentFilter}\n                        style={{ width: 140 }}\n                        placement=\"bottomLeft\"\n                        options={filters}\n                        onChange={handleChange}\n                    />\n                </Tooltip>\n            </Col>\n            <Col span={10}>\n                <Space.Compact style={{ width: \"100%\" }}>\n                    <Input placeholder=\"Enter the name of the movie\" />\n                    <Button type=\"primary\">Search</Button>\n                </Space.Compact>\n            </Col>\n        </Row>\n    );\n};\n","import { Col, Row } from 'antd';\nimport cls from './MainContainer.module.scss';\nimport { ListFilms } from 'widgets/ListFilms';\nimport { CarouselFilms } from 'widgets/CarouselFilms';\nimport { SortedAndInput } from 'features/SortedAndInput';\nimport { memo } from 'react';\n\n\n\nexport const MainContainer = memo(() => {\n\n\treturn (\n\t\t<Row justify='center' style={{borderRadius: 40}}>\n\t\t\t<CarouselFilms />\n\t\t\t<Col\n\t\t\t\tspan={20}\n\t\t\t\tclassName={cls.inputAndFilmsContainer}>\n\t\t\t\t<SortedAndInput />\n\t\t\t\t<ListFilms />\n\t\t\t</Col>\n\t\t</Row>\n\t);\n});\n","import { useSelector } from 'react-redux';\nimport { memo, useEffect } from 'react';\nimport { MainContainer } from 'widgets/MainContainer';\n\n\nconst MainPage = memo(() => {\n  const filters = useSelector((state: any) => state.films.filter);\n\n  useEffect(() => {\n    console.log(\"filters: \", filters);\n  }, [filters]);\n\n  return (\n    \n    <div>\n      <MainContainer />\n    </div>\n  );\n});\n\nexport default MainPage;\n"],"names":["PostFilm","memo","_ref","film","console","log","_jsx","Badge","count","rating","color","children","className","cls","_jsxs","Card","loading","hoverable","cover","alt","src","Meta","title","release_year","description","genre","actors","dispatch","useDispatch","visibleCurrentFilm","useSelector","state","modalAuthAndRegisterReducer","isVisibleCurrentFilm","handleOpenCurrentFilm","useCallback","AuthActions","openCurrentFilm","handleCloseCurrentFilm","closeCurrentFilm","Col","span","style","position","Skeleton","Image","active","fontSize","width","height","marginTop","onClick","display","justifyContent","flexDirection","alignItems","Row","gutter","Input","size","block","Drawer","Divider","orientation","fontWeight","placement","closable","open","onClose","overflow","extra","CloseOutlined","CurrentFilm","ListFilms","filter","films","isLoading","error","useEffect","fetchFilms","undefined","_Fragment","Spin","tip","length","margin","marginBottom","map","i","item","index","SkeletonItem","CarouselFilms","carouselItems","mstiteli","image2","image3","image4","Carousel","autoplay","Filters","filters","value","By_date","label","By_alphabet","By_rating","SortedAndInput","currentFilter","justify","align","Tooltip","arrow","Select","defaultValue","options","onChange","filmsActions","changeFilters","Space","Compact","placeholder","Button","type","MainContainer","borderRadius","MainPage"],"sourceRoot":""}