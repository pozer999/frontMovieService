{"version":3,"file":"static/js/772.d7e1475e.chunk.js","mappings":"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","sources":["webpack://movie/./src/widgets/MainContainer/ui/MainContainer.module.scss?3fff","webpack://movie/./src/entities/postFilm/ui/PostFilm.module.scss?8a44","entities/postFilm/ui/PostFilm.tsx","shared/SkeletonItem/SkeletonItem.tsx","widgets/ListFilms/ui/ListFilms.tsx","webpack://movie/./src/widgets/CarouselFilms/ui/CarouselFilms.module.scss?bbfa","widgets/CarouselFilms/ui/CarouselFilms.tsx","shared/const/filters.ts","features/SortedAndInput/ui/SortedAndInput.tsx","widgets/MainContainer/ui/MainContainer.tsx","pages/MainPage/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputAndFilmsContainer\":\"MainContainer_inputAndFilmsContainer__nwyBh\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerPost\":\"PostFilm_containerPost__89KLb\"};","import cls from './PostFilm.module.scss';\nimport { Badge, Card } from 'antd';\nimport Meta from 'antd/es/card/Meta';\nimport { memo } from 'react';\nexport const PostFilm = memo(({ film }: any) => {\n\tconsole.log('film: ', film);\n\treturn (\n\t\t<Badge\n\t\t\tcount={film.rating}\n\t\t\tcolor='green'>\n\t\t\t<div className={cls.containerPost}>\n\t\t\t\t<Card\n\t\t\t\t\tloading={false}\n\t\t\t\t\thoverable\n\t\t\t\t\tcover={\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt='example'\n\t\t\t\t\t\t\tsrc='../image/mstiteli-voyna-beskonechnosti-2160x3840-mstiteli-voyna-beskonechnosti-17937.jpg'\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<Meta\n\t\t\t\t\t\ttitle={[film.title, ' · ', film.release_year]}\n\t\t\t\t\t\tdescription={film.genre}\n\t\t\t\t\t/>\n\t\t\t\t\t<Meta description={film.actors} />\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</Badge>\n\t);\n});\n\n","import { Card, Col, Row, Skeleton} from \"antd\";\nimport React from \"react\";\n\nconst SkeletonItem = () => {\n    return (\n        <Col className=\"gutter-row\" span={6} style={{position: \"relative\"}}>\n            <Card\n                loading={false}\n                hoverable\n                cover={\n                    <Skeleton.Image active={true} style={{ fontSize: 40, width: 250, height: 200, marginTop: 20}} />\n                }\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    height: \"100%\"\n                }}\n            >\n                <Row gutter={[1, 10]}>\n                    <Skeleton.Input active={true} size=\"small\" />\n                    <Skeleton.Input active={true} size=\"small\" block />\n                    <Skeleton.Input active={true} size=\"small\" block />\n                </Row>\n            </Card>\n        </Col>\n    );\n};\n\nexport default SkeletonItem;\n","import { Col, Grid, Row, Skeleton, Space, Spin } from \"antd\";\nimport React, { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFilms } from \"../../../store/FilmsSlice\";\nimport { AppDispatch, RootState } from \"../../../store\";\nimport { PostFilm } from \"entities/postFilm\";\nimport SkeletonItem from \"shared/SkeletonItem/SkeletonItem\";\n\nexport const ListFilms = memo(() => {\n    const dispatch = useDispatch<AppDispatch>();\n    const filter = useSelector((state: any) => state.films.filter);\n    const films = useSelector((state: any) => state.films.films);\n    const isLoading = useSelector((state: RootState) => state.films.isLoading);\n    const error = useSelector((state: RootState) => state.films.error);\n    console.log(\"list: \", films);\n    useEffect(() => {\n        dispatch(fetchFilms(filter));\n    }, [filter, dispatch]);\n    return (\n        <div>\n            {isLoading ? (\n                error === undefined ? (\n                    <>\n                        <Spin\n                            tip=\"Loading\"\n                            size=\"large\"\n                            style={{\n                                alignItems: \"center\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                marginTop: 30,\n                            }}\n                        ></Spin>\n                        <Skeleton.Image active={true} />\n                    </>\n                ) : (\n                    <div\n                        style={{\n                            alignItems: \"center\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: 30,\n                            color: \"rgb(202, 92, 92)\",\n                            fontSize: 20,\n                        }}\n                    >\n                        Ошибка загрузки фильмов...\n                    </div>\n                )\n            ) : films.length !== 0 ? (\n                <Row gutter={[16, 24]} style={{ margin: 10, marginTop: 50, marginBottom: 50 }}>\n                    {films.map((film: any, i: number) => (\n                        <Col className=\"gutter-row\" span={6} key={i}>\n                            <PostFilm film={film} />\n                        </Col>\n                    ))}\n                </Row>\n            ) : (\n                <Row gutter={[16, 24]} style={{ margin: 10, marginTop: 50, marginBottom: 50 }}>\n                    {[1,2,3,4,5,6,7,8].map((item, index) => (\n                            <SkeletonItem key={index}/>\n                    ))}\n                </Row>\n            )}\n        </div>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"carousel\":\"CarouselFilms_carousel__gK-x5\",\"imageCarousel\":\"CarouselFilms_imageCarousel__SaucW\"};","import cls from \"./CarouselFilms.module.scss\";\nimport { Carousel } from \"antd\";\nimport { FC, memo } from \"react\";\n/////////////////////////////////\nimport mstiteli from '../../../image/kartinki-mstiteli-14.jpg';\nimport image2 from '../../../image/2.jpg';\nimport image3 from '../../../image/3.jpeg';\nimport image4 from '../../../image/4.jpeg';\n//////////////////////////////////\nexport const CarouselFilms: FC = memo(() => {\n    const carouselItems: string[] = [\n        mstiteli,\n        image2,\n        image3,\n        image4,\n    ];\n\n    return (\n        <div>\n            <Carousel autoplay className={cls.carousel}>\n                {carouselItems.map((item, index) => (\n                    <img\n                        src={item}\n                        alt=\"\"\n                        className={cls.imageCarousel}\n                        key={index}\n                    />\n                ))}\n            </Carousel>\n        </div>\n    );\n});\n\n\n// export default memo(CarouselFilms);\n","export enum Filters {\n  By_date = 'By date',\n  By_alphabet = 'By alphabet',\n  By_rating = 'By rating',\n}\nexport interface filterType {\n  value: string;\n  label: string;\n}\nexport const filters = [\n  { value: Filters.By_date, label: Filters.By_date },\n  { value: Filters.By_alphabet, label: Filters.By_alphabet },\n  { value: Filters.By_rating, label: Filters.By_rating },\n];\n","import { Button, Col, Input, Row, Select, Space } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { filmsActions } from '../../../store/FilmsSlice';\nimport { filters } from '../../../shared/const/filters';\n\nexport const SortedAndInput = () => {\n  const dispatch = useDispatch();\n  const currentFilter = useSelector((state: any) => state.films.filters);\n  const handleChange = (value: string) => {\n    dispatch(filmsActions.changeFilters(value));\n  };\n  return (\n    <Row justify=\"space-between\" align=\"middle\" style={{ margin: 10 }}>\n      <Col span={14}>\n        <Select\n          defaultValue={currentFilter}\n          style={{ width: 140 }}\n          placement=\"bottomLeft\"\n          options={filters}\n          onChange={handleChange}\n        />\n      </Col>\n      <Col span={10}>\n        <Space.Compact style={{ width: '100%' }}>\n          <Input placeholder='Enter the name of the movie'/>\n          <Button type=\"primary\">Search</Button>\n        </Space.Compact>\n      </Col>\n    </Row>\n  );\n};\n\n","import { Col, Row } from 'antd';\nimport cls from './MainContainer.module.scss';\nimport { ListFilms } from 'widgets/ListFilms';\nimport { CarouselFilms } from 'widgets/CarouselFilms';\nimport { SortedAndInput } from 'features/SortedAndInput';\nimport { memo } from 'react';\n\n\n\nexport const MainContainer = memo(() => {\n\n\treturn (\n\t\t<Row justify='center' style={{borderRadius: 40}}>\n\t\t\t<CarouselFilms />\n\t\t\t<Col\n\t\t\t\tspan={20}\n\t\t\t\tclassName={cls.inputAndFilmsContainer}>\n\t\t\t\t<SortedAndInput />\n\t\t\t\t<ListFilms />\n\t\t\t</Col>\n\t\t</Row>\n\t);\n});\n","import { useSelector } from 'react-redux';\nimport { memo, useEffect } from 'react';\nimport { MainContainer } from 'widgets/MainContainer';\n\n\nconst MainPage = memo(() => {\n  const filters = useSelector((state: any) => state.films.filter);\n\n  useEffect(() => {\n    console.log(\"filters: \", filters);\n  }, [filters]);\n\n  return (\n    \n    <div>\n      <MainContainer />\n    </div>\n  );\n});\n\nexport default MainPage;\n"],"names":["PostFilm","memo","_ref","film","console","log","_jsx","Badge","count","rating","color","children","className","cls","_jsxs","Card","loading","hoverable","cover","alt","src","Meta","title","release_year","description","genre","actors","Col","span","style","position","Skeleton","Image","active","fontSize","width","height","marginTop","display","justifyContent","flexDirection","alignItems","Row","gutter","Input","size","block","ListFilms","dispatch","useDispatch","filter","useSelector","state","films","isLoading","error","useEffect","fetchFilms","undefined","_Fragment","Spin","tip","length","margin","marginBottom","map","i","item","index","SkeletonItem","CarouselFilms","carouselItems","mstiteli","image2","image3","image4","Carousel","autoplay","Filters","filters","value","By_date","label","By_alphabet","By_rating","SortedAndInput","currentFilter","justify","align","Select","defaultValue","placement","options","onChange","filmsActions","changeFilters","Space","Compact","placeholder","Button","type","MainContainer","borderRadius","MainPage"],"sourceRoot":""}