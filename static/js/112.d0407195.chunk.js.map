{"version":3,"file":"static/js/112.d0407195.chunk.js","mappings":"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","sources":["webpack://movie/./src/widgets/MainContainer/ui/MainContainer.module.scss?3fff","webpack://movie/./src/entities/postFilm/ui/PostFilm.module.scss?8a44","entities/postFilm/ui/PostFilm.tsx","widgets/ListFilms/ui/ListFilms.tsx","webpack://movie/./src/widgets/CarouselFilms/ui/CarouselFilms.module.scss?bbfa","widgets/CarouselFilms/ui/CarouselFilms.tsx","shared/const/filters.ts","features/SortedAndInput/ui/SortedAndInput.tsx","widgets/MainContainer/ui/MainContainer.tsx","pages/MainPage/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputAndFilmsContainer\":\"MainContainer_inputAndFilmsContainer__nwyBh\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerPost\":\"PostFilm_containerPost__89KLb\"};","import cls from './PostFilm.module.scss';\nimport { Badge, Card } from 'antd';\nimport Meta from 'antd/es/card/Meta';\nimport { memo } from 'react';\nexport const PostFilm = memo(({ film }: any) => {\n\tconsole.log('film: ', film);\n\treturn (\n\t\t<Badge\n\t\t\tcount={film.rating}\n\t\t\tcolor='green'>\n\t\t\t<div className={cls.containerPost}>\n\t\t\t\t<Card\n\t\t\t\t\tloading={false}\n\t\t\t\t\thoverable\n\t\t\t\t\tcover={\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt='example'\n\t\t\t\t\t\t\tsrc='../image/mstiteli-voyna-beskonechnosti-2160x3840-mstiteli-voyna-beskonechnosti-17937.jpg'\n\t\t\t\t\t\t/>\n\t\t\t\t\t}>\n\t\t\t\t\t<Meta\n\t\t\t\t\t\ttitle={[film.title, ' · ', film.release_year]}\n\t\t\t\t\t\tdescription={film.genre}\n\t\t\t\t\t/>\n\t\t\t\t\t<Meta description={film.actors} />\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</Badge>\n\t);\n});\n\n","import { Col, Row, Spin } from \"antd\";\nimport React, { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFilms } from \"../../../store/FilmsSlice\";\nimport { AppDispatch, RootState } from \"../../../store\";\nimport { PostFilm } from \"entities/postFilm\";\n\nexport const ListFilms = memo(() => {\n    const dispatch = useDispatch<AppDispatch>();\n    const filter = useSelector((state: any) => state.films.filter);\n    const films = useSelector((state: any) => state.films.films);\n    const isLoading = useSelector((state: RootState) => state.films.isLoading);\n    const error = useSelector((state: RootState) => state.films.error);\n    console.log(\"list: \", films);\n    useEffect(() => {\n        dispatch(fetchFilms(filter));\n    }, [filter, dispatch]);\n    return (\n        <div>\n            {isLoading ? (\n                error === undefined ? (\n                    <Spin\n                        tip=\"Loading\"\n                        size=\"large\"\n                        style={{\n                            alignItems: \"center\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: 30,\n                        }}\n                    ></Spin>\n                ) : (\n                    <div\n                        style={{\n                            alignItems: \"center\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: 30,\n                            color: \"rgb(202, 92, 92)\",\n                            fontSize: 20,\n                        }}\n                    >\n                        Ошибка загрузки фильмов...\n                    </div>\n                )\n            ) : (films.length !== 0 ? (\n                <Row gutter={[16, 24]} style={{ margin: 10, marginTop: 45 }}>\n                    {films.map((film: any, i: number) => (\n                        <Col className=\"gutter-row\" span={6} key={i}>\n                            <PostFilm film={film} />\n                        </Col>\n                    ))}\n                </Row>\n            ) : (\n                <Spin\n                    tip=\"Loading\"\n                    size=\"large\"\n                    style={{\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginTop: 30,\n                    }}\n                ></Spin>\n            ))}\n        </div>\n    );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"carousel\":\"CarouselFilms_carousel__gK-x5\",\"imageCarousel\":\"CarouselFilms_imageCarousel__SaucW\"};","import cls from \"./CarouselFilms.module.scss\";\nimport { Carousel } from \"antd\";\nimport { FC, memo } from \"react\";\n\nexport const CarouselFilms: FC = memo(() => {\n    const carouselItems: string[] = [\n        \"../image/kartinki-mstiteli-14.jpg\",\n        \"../image/2.jpg\",\n        \"../image/3.jpeg\",\n        \"../image/4.jpeg\",\n    ];\n\n    return (\n        <div>\n            <Carousel autoplay className={cls.carousel}>\n                {carouselItems.map((item, index) => (\n                    <img\n                        src={item}\n                        alt=\"\"\n                        className={cls.imageCarousel}\n                        key={index}\n                    />\n                ))}\n            </Carousel>\n        </div>\n    );\n});\n\n\n// export default memo(CarouselFilms);\n","export enum Filters {\n  By_date = 'By date',\n  By_alphabet = 'By alphabet',\n  By_rating = 'By rating',\n}\nexport interface filterType {\n  value: string;\n  label: string;\n}\nexport const filters = [\n  { value: Filters.By_date, label: Filters.By_date },\n  { value: Filters.By_alphabet, label: Filters.By_alphabet },\n  { value: Filters.By_rating, label: Filters.By_rating },\n];\n","import { Button, Col, Input, Row, Select, Space } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { filmsActions } from '../../../store/FilmsSlice';\nimport { filters } from '../../../shared/const/filters';\n\nexport const SortedAndInput = () => {\n  const dispatch = useDispatch();\n  const currentFilter = useSelector((state: any) => state.films.filters);\n  const handleChange = (value: string) => {\n    dispatch(filmsActions.changeFilters(value));\n  };\n  return (\n    <Row justify=\"space-between\" align=\"middle\" style={{ margin: 10 }}>\n      <Col span={14}>\n        <Select\n          defaultValue={currentFilter}\n          style={{ width: 140 }}\n          placement=\"bottomLeft\"\n          options={filters}\n          onChange={handleChange}\n        />\n      </Col>\n      <Col span={10}>\n        <Space.Compact style={{ width: '100%' }}>\n          <Input placeholder='Enter the name of the movie'/>\n          <Button type=\"primary\">Search</Button>\n        </Space.Compact>\n      </Col>\n    </Row>\n  );\n};\n\n","import { Col, Row } from 'antd';\nimport cls from './MainContainer.module.scss';\nimport { ListFilms } from 'widgets/ListFilms';\nimport { CarouselFilms } from 'widgets/CarouselFilms';\nimport { SortedAndInput } from 'features/SortedAndInput';\nimport { memo } from 'react';\n\n\n\nexport const MainContainer = memo(() => {\n\n\treturn (\n\t\t<Row justify='center' style={{borderRadius: 40}}>\n\t\t\t<CarouselFilms />\n\t\t\t<Col\n\t\t\t\tspan={20}\n\t\t\t\tclassName={cls.inputAndFilmsContainer}>\n\t\t\t\t<SortedAndInput />\n\t\t\t\t<ListFilms />\n\t\t\t</Col>\n\t\t</Row>\n\t);\n});\n","import { useSelector } from 'react-redux';\nimport { memo, useEffect } from 'react';\nimport { MainContainer } from 'widgets/MainContainer';\n\n\nconst MainPage = memo(() => {\n  const filters = useSelector((state: any) => state.films.filter);\n\n  useEffect(() => {\n    console.log(\"filters: \", filters);\n  }, [filters]);\n\n  return (\n    \n    <div>\n      <MainContainer />\n    </div>\n  );\n});\n\nexport default MainPage;\n"],"names":["PostFilm","memo","_ref","film","console","log","_jsx","Badge","count","rating","color","children","className","cls","_jsxs","Card","loading","hoverable","cover","alt","src","Meta","title","release_year","description","genre","actors","ListFilms","dispatch","useDispatch","filter","useSelector","state","films","isLoading","error","useEffect","fetchFilms","undefined","Spin","tip","size","style","alignItems","display","justifyContent","marginTop","fontSize","length","Row","gutter","margin","map","i","Col","span","CarouselFilms","Carousel","autoplay","item","index","Filters","filters","value","By_date","label","By_alphabet","By_rating","SortedAndInput","currentFilter","justify","align","Select","defaultValue","width","placement","options","onChange","filmsActions","changeFilters","Space","Compact","Input","placeholder","Button","type","MainContainer","borderRadius","MainPage"],"sourceRoot":""}